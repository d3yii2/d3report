<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3schedule\models\base;

use d3yii2\d3schedule\models\ScheduleTaskQuery;
use Yii;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;
use yii\db\Exception;

/**
 * This is the base-model class for table "schedule_schedule".
 *
 * @property integer $id
 * @property string $name
 * @property string $command
 * @property string $command_params
 * @property string $status
 *
 * @property \d3yii2\d3schedule\models\scheduleSubscriber[] $scheduleSubscribers
 * @property string $aliasModel
 */
abstract class ScheduleTask extends ActiveRecord
{



    /**
    * ENUM field values
    */
    public const STATUS_ACTIVE = 'Active';
    public const STATUS_DISABLED = 'Disabled';
    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'schedule_task';
    }


    /**
     * @inheritdoc
     */
    public function rules(): array
    {
        return [
            [['name'], 'required'],
            [['status'], 'string'],
            [['name'], 'string', 'max' => 100],
            [['command', 'command_params'], 'string', 'max' => 255],
            ['status', 'in', 'range' => [
                    self::STATUS_ACTIVE,
                    self::STATUS_DISABLED,
                ]
            ],
            [['id'],'integer' ,'min' => 0 ,'max' => 65535]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3schedule', 'ID'),
            'name' => Yii::t('d3schedule', 'Name'),
            'command' => Yii::t('d3schedule', 'Command'),
            'command_params' => Yii::t('d3schedule', 'Command Params'),
            'status' => Yii::t('d3schedule', 'Status'),
        ];
    }

    /**
     * @return ActiveQuery
     */
    public function getscheduleSubscribers()
    {
        return $this->hasMany(\d3yii2\d3schedule\models\ScheduleSubscriber::class, ['schedule_id' => 'id']);
    }


    /**
     * @return \d3yii2\d3schedule\models\scheduleSubscriber
     * @throws Exception
     */
    public function newscheduleSubscribers()
    {
        if ($this->getIsNewRecord()){
            throw new Exception('Can not create new related record for new record!');
        }
        $model = new \d3yii2\d3schedule\models\scheduleSubscriber();
        $model->schedule_id = $this->id;
        return $model;
    }


    
    /**
     * @inheritdoc
     * @return ScheduleTaskQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new ScheduleTaskQuery(get_called_class());
    }


    /**
     * get column status enum value label
     * @param string $value
     * @return string
     */
    public static function getStatusValueLabel($value): string
    {
        $labels = self::optsStatus();
        return $labels[$value] ?? $value;
    }

    /**
     * column status ENUM value labels
     * @return array
     */
    public static function optsStatus(): array
    {
        return [
            self::STATUS_ACTIVE => Yii::t('d3schedule', self::STATUS_ACTIVE),
            self::STATUS_DISABLED => Yii::t('d3schedule', self::STATUS_DISABLED),
        ];
    }
}
